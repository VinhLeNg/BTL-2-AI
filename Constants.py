from colorama import Back
# convert coordinatem (str) to index (int)
Sqr = {
    "a8": 63, "b8": 62, "c8": 61, "d8": 60, "e8": 59, "f8": 58, "g8": 57, "h8": 56, 
    "a7": 55, "b7": 54, "c7": 53, "d7": 52, "e7": 51, "f7": 50, "g7": 49, "h7": 48, 
    "a6": 47, "b6": 46, "c6": 45, "d6": 44, "e6": 43, "f6": 42, "g6": 41, "h6": 40, 
    "a5": 39, "b5": 38, "c5": 37, "d5": 36, "e5": 35, "f5": 34, "g5": 33, "h5": 32, 
    "a4": 31, "b4": 30, "c4": 29, "d4": 28, "e4": 27, "f4": 26, "g4": 25, "h4": 24, 
    "a3": 23, "b3": 22, "c3": 21, "d3": 20, "e3": 19, "f3": 18, "g3": 17, "h3": 16, 
    "a2": 15, "b2": 14, "c2": 13, "d2": 12, "e2": 11, "f2": 10, "g2": 9, "h2": 8, 
    "a1": 7, "b1": 6, "c1": 5, "d1": 4, "e1": 3, "f1": 2, "g1": 1, "h1": 0
}
# convert index (int) to coordinate (str)
Coo = {
    63: "a8", 62: "b8", 61: "c8", 60: "d8", 59: "e8", 58: "f8", 57: "g8", 56: "h8", 
    55: "a7", 54: "b7", 53: "c7", 52: "d7", 51: "e7", 50: "f7", 49: "g7", 48: "h7", 
    47: "a6", 46: "b6", 45: "c6", 44: "d6", 43: "e6", 42: "f6", 41: "g6", 40: "h6", 
    39: "a5", 38: "b5", 37: "c5", 36: "d5", 35: "e5", 34: "f5", 33: "g5", 32: "h5", 
    31: "a4", 30: "b4", 29: "c4", 28: "d4", 27: "e4", 26: "f4", 25: "g4", 24: "h4", 
    23: "a3", 22: "b3", 21: "c3", 20: "d3", 19: "e3", 18: "f3", 17: "g3", 16: "h3", 
    15: "a2", 14: "b2", 13: "c2", 12: "d2", 11: "e2", 10: "f2", 9: "g2", 8: "h2", 
    7: "a1", 6: "b1", 5: "c1", 4: "d1", 3: "e1", 2: "f1", 1: "g1", 0: "h1" 
}

NOT_A_FILE  = 9187201950435737471
NOT_AB_FILE = 4557430888798830399
NOT_H_FILE  = 18374403900871474942
NOT_GH_FILE = 18229723555195321596

bishop_relevant_bits = {
    63: 6, 62: 5, 61: 5, 60: 5, 59: 5, 58: 5, 57: 5, 56: 6, 
    55: 5, 54: 5, 53: 5, 52: 5, 51: 5, 50: 5, 49: 5, 48: 5, 
    47: 5, 46: 5, 45: 7, 44: 7, 43: 7, 42: 7, 41: 5, 40: 5, 
    39: 5, 38: 5, 37: 7, 36: 9, 35: 9, 34: 7, 33: 5, 32: 5, 
    31: 5, 30: 5, 29: 7, 28: 9, 27: 9, 26: 7, 25: 5, 24: 5, 
    23: 5, 22: 5, 21: 7, 20: 7, 19: 7, 18: 7, 17: 5, 16: 5, 
    15: 5, 14: 5, 13: 5, 12: 5, 11: 5, 10: 5, 9: 5, 8: 5, 
    7: 6, 6: 5, 5: 5, 4: 5, 3: 5, 2: 5, 1: 5, 0: 6
}

rook_relevant_bits = {
    63: 12, 62: 11, 61: 11, 60: 11, 59: 11, 58: 11, 57: 11, 
    56: 12, 55: 11, 54: 10, 53: 10, 52: 10, 51: 10, 50: 10, 
    49: 10, 48: 11, 47: 11, 46: 10, 45: 10, 44: 10, 43: 10, 
    42: 10, 41: 10, 40: 11, 39: 11, 38: 10, 37: 10, 36: 10, 
    35: 10, 34: 10, 33: 10, 32: 11, 31: 11, 30: 10, 29: 10, 
    28: 10, 27: 10, 26: 10, 25: 10, 24: 11, 23: 11, 22: 10, 
    21: 10, 20: 10, 19: 10, 18: 10, 17: 10, 16: 11, 15: 11, 
    14: 10, 13: 10, 12: 10, 11: 10, 10: 10, 9: 10, 8: 11, 
    7: 12, 6: 11, 5: 11, 4: 11, 3: 11, 2: 11, 1: 11, 0: 12
}

rook_magic_number = {
    63: 19210667294720131, 62: 1688918579745800, 61: 2388115066307297312, 60: 18049584257335313, 59: 8796650899079, 58: 144117409714806793, 57: 288231003233714704, 
    56: 4743416316117979136, 55: 2595199972527145024, 54: 18612567598174240, 53: 577630632679572104, 52: 648835027773172224, 51: 140911518433280, 50: 7210263630485473280, 
    49: 281475178103104, 48: 1157498805873164288, 47: 1144677538529280, 46: 70368750485536, 45: 144398889456239874, 44: 572025221943428, 43: 144132780261934080, 
    42: 1156308137859366917, 41: 2485986995386515520, 40: 7498497781915452416, 39: 37163497716459777, 38: 1442387733975697424, 37: 2251800891686912, 36: 175923622052621, 
    35: 41108540875603968, 34: 194217733930484496, 33: 562949959811072, 32: 360289070271741984, 31: 4613946614539688512, 30: 4611686328739825696, 29: 2305843078038556928, 
    28: 882781393535516672, 27: 369317161858654210, 26: 72101712009101568, 25: 153263281182810624, 24: 290649060442272, 23: 38758103650308, 22: 8796093153808, 
    21: 4403146784769, 20: 9241386470286041088, 19: 2251812698690048, 18: 396317316966514693, 17: 46180830674952, 16: 9232424522263562304, 15: 6759797488107520, 
    14: 288242754266333200, 13: 2739666318142746624, 12: 1125977233031360, 11: 564049481850882, 10: 11399736557330465, 9: 2305916676492789760, 8: 1126741720432704, 
    7: 180707079802063232, 6: 4611686844671740032, 5: 4899921900863553536, 4: 576461027316613120, 3: 9259963801007038976, 2: 2326674906311297024, 1: 4809845845140701224, 0: 1441433364325204032
}

bishop_magic_number = {
    63: 1208095582204199042, 62: 4618443685915263170, 61: 297380511918064394, 60: 563517262397968, 59: 13872213851770454528, 58: 576566588888060257, 57: 585467960158595080, 
    56: 52776830771208, 55: 13835493530608738305, 54: 3603060045427769345, 53: 9223513170021712128, 52: 38281974510587088, 51: 72198400715522248, 50: 2261420676825088, 
    49: 378302682236388098, 48: 2384691187896291864, 47: 721829652857682, 46: 9242231429379655704, 45: 153263125905295360, 44: 4620783446893002754, 43: 14781869086212098, 
    42: 9250820245148434437, 41: 4612110447145910370, 40: 4925813317173760, 39: 13935231982109186, 38: 4629700451569338945, 37: 108088663364370946, 36: 2252161734148128, 
    35: 54324688263849088, 34: 13871093475142799616, 33: 13532858454999192, 32: 307019105725582336, 31: 2954924409689473760, 30: 458496415907844, 29: 126250460586709008, 
    28: 2613883287638640673, 27: 4611686087147160593, 26: 2324075111059030022, 25: 9223530371906535570, 24: 1158397622302543874, 23: 1125902129864704, 22: 452752504468340874, 
    21: 4612548637244804148, 20: 72103784330952968, 19: 666532783506069540, 18: 16006356077738233857, 17: 216735801088688156, 16: 18581746517943296, 15: 1729383530770726936, 
    14: 283820045647872, 13: 5188147871317393924, 12: 4530160779166080, 11: 2304580803100672, 10: 19241474457664, 9: 18366324372213768, 8: 2627283034570881, 
    7: 327826537447936, 6: 10376615698504941576, 5: 9440180388246340096, 4: 5476526817903166017, 3: 12992902663319323724, 2: 14418274344600928292, 1: 1299314883997745160, 0: 13510868294173089
}
# king attack lookup table
king_attacks = dict()
# pawn attack lookup table
pawn_attacks = dict()
# knight attack lookup table
knight_attacks = dict()

bishop_masks = dict()
rook_masks = dict()

bishop_attacks = dict()
rook_attacks = dict()
# for printing purposes
unicode_chars = {
    "K": "\u2654", "Q": "\u2655", "R": "\u2656", "B": "\u2657", "N": "\u2658", "P": "\u2659",
    "k": "\u265a", "q": "\u265b", "r": "\u265c", "b": "\u265d", "n": "\u265e", "p": "\u265f"
}

color = { True: Back.GREEN, False: Back.WHITE }

pieces = { 0: ["K", "Q", "R", "B", "N", "P"], 1: ["k", "q", "r", "b", "n", "p"] }
# convert piece format (string to int)
encode_piece = {
    "K": 0, "Q": 1, "R": 2, "B": 3, "N": 4, "P": 5,
    "k": 6, "q": 7, "r": 8, "b": 9, "n": 10, "p": 11
}
# convert piece format (int to string)
decode_piece = {
    0: "K", 1: "Q", 2: "R", 3: "B", 4: "N", 5: "P",
    6: "k", 7: "q", 8: "r", 9: "b", 10: "n", 11: "p"
}

promotion_pattern = "^[a-h][1-8] [a-h][1-8] [Q,R,N,B]$"
other_pattern = "^(([K,Q,R,B,N] )?[a-h][1-8]) [a-h][1-8]$"

piece_value = { "K": 1000, "Q": 9, "R": 5, "B": 3, "N": 3, "P": 1 }